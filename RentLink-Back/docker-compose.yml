version: '3.8'
services:
  rentlink:
    container_name: rentlink
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '9090:8080'
    expose:
      - '9090'
    restart: always
    depends_on:
      - db
    networks:
      - spring-cloud-network
  db:
    image: postgres:14.1-alpine
    restart: always
    hostname: postgresql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes: 
      - ./docker/data:/var/lib/postgresql/data
    networks:
      - spring-cloud-network
  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_DB_DRIVER: postgres
      ADMINER_DEFAULT_DB_HOST: postgresql
      ADMINER_DEFAULT_DB_NAME: rentlinkdb
      ADMINER_DESIGN: nette
      ADMINER_PLUGINS: tables-filter tinymce
    ports:
      - '8080:8080'
    networks:
      - spring-cloud-network
networks:
    spring-cloud-network: